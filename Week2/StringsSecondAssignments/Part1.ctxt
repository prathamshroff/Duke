#BlueJ class context
comment0.target=Part1
comment0.text=\n\ This\ assignment\ is\ to\ write\ the\ code\ from\ the\ lesson\ to\ make\ the\ following\ improvements\ to\ your\ algorithm\:\n\n\ A.\ Find\ a\ gene\ in\ a\ strand\ of\ DNA\ where\ the\ stop\ codon\ could\ be\ any\ of\ the\ three\ stop\ codons\ \u201CTAA\u201D,\ \u201CTAG\u201D,\ or\ \u201CTGA\u201D.\n\n\ B.\ Find\ all\ the\ genes\ (where\ the\ stop\ codon\ could\ be\ any\ of\ the\ three\ stop\ codons)\ in\ a\ strand\ of\ DNA.\n\n\ This\ will\ help\ you\ see\ if\ you\ really\ understood\ how\ to\ put\ the\ code\ together,\ and\ might\ identify\ a\ part\ that\ you\ did\ not\ fully\ understand.\ If\ you\ get\ stuck,\ then\ you\ can\ go\ back\ and\ watch\ the\ coding\ videos\ that\ go\ with\ this\ lesson\ again.\n\n\ Specifically,\ you\ should\ do\ the\ following\:\n\n\ 1.\ Create\ a\ new\ Java\ project\ named\ StringsSecondAssignments.\ You\ can\ put\ all\ the\ classes\ for\ this\ programming\ exercise\ in\ this\ project.\n\n\ 2.\ Create\ a\ new\ Java\ Class\ named\ Part1.\ The\ following\ methods\ go\ in\ this\ class.\n\n\ 3.\ Write\ the\ method\ findStopCodon\ that\ has\ three\ parameters,\ a\ String\ parameter\ named\ dna,\ an\ integer\ parameter\ named\ startIndex\ that\ represents\ where\ the\ first\ occurrence\ of\ ATG\ occurs\ in\ dna,\ and\ a\ String\ parameter\ named\ stopCodon.\ This\ method\ returns\ the\ index\ of\ the\ first\ occurrence\ of\ stopCodon\ that\ appears\ past\ startIndex\ and\ is\ a\ multiple\ of\ 3\ away\ from\ startIndex.\ If\ there\ is\ no\ such\ stopCodon,\ this\ method\ returns\ the\ length\ of\ the\ dna\ strand.\n\n\ 4.\ Write\ the\ void\ method\ testFindStopCodon\ that\ calls\ the\ method\ findStopCodon\ with\ several\ examples\ and\ prints\ out\ the\ results\ to\ check\ if\ findStopCodon\ is\ working\ correctly.\ Think\ about\ what\ types\ of\ examples\ you\ should\ check.\ For\ example,\ you\ may\ want\ to\ check\ some\ strings\ of\ DNA\ that\ have\ genes\ and\ some\ that\ do\ not.\ What\ other\ examples\ should\ you\ check?\n\n\ 5.\ Write\ the\ method\ findGene\ that\ has\ one\ String\ parameter\ dna,\ representing\ a\ string\ of\ DNA.\ In\ this\ method\ you\ should\ do\ the\ following\:\n\n\ Find\ the\ index\ of\ the\ first\ occurrence\ of\ the\ start\ codon\ \u201CATG\u201D.\ If\ there\ is\ no\ \u201CATG\u201D,\ return\ the\ empty\ string.\n\ Find\ the\ index\ of\ the\ first\ occurrence\ of\ the\ stop\ codon\ \u201CTAA\u201D\ after\ the\ first\ occurrence\ of\ \u201CATG\u201D\ that\ is\ a\ multiple\ of\ three\ away\ from\ the\ \u201CATG\u201D.\ Hint\:\ call\ findStopCodon.\n\ Find\ the\ index\ of\ the\ first\ occurrence\ of\ the\ stop\ codon\ \u201CTAG\u201D\ after\ the\ first\ occurrence\ of\ \u201CATG\u201D\ that\ is\ a\ multiple\ of\ three\ away\ from\ the\ \u201CATG\u201D.\ Find\ the\ index\ of\ the\ first\ occurrence\ of\ the\ stop\ codon\ \u201CTGA\u201D\ after\ the\ first\ occurrence\ of\ \u201CATG\u201D\ that\ is\ a\ multiple\ of\ three\ away\ from\ the\ \u201CATG\u201D.\n\ Return\ the\ gene\ formed\ from\ the\ \u201CATG\u201D\ and\ the\ closest\ stop\ codon\ that\ is\ a\ multiple\ of\ three\ away.\ If\ there\ is\ no\ valid\ stop\ codon\ and\ therefore\ no\ gene,\ return\ the\ empty\ string.\n\ 6.\ Write\ the\ void\ method\ testFindGene\ that\ has\ no\ parameters.\ You\ should\ create\ five\ DNA\ strings.\ The\ strings\ should\ have\ specific\ test\ cases\ such\ as\ DNA\ with\ no\ \u201CATG\u201D,\ DNA\ with\ \u201CATG\u201D\ and\ one\ valid\ stop\ codon,\ DNA\ with\ \u201CATG\u201D\ and\ multiple\ valid\ stop\ codons,\ DNA\ with\ \u201CATG\u201D\ and\ no\ valid\ stop\ codons.\ Think\ carefully\ about\ what\ would\ be\ good\ examples\ to\ test.\ For\ each\ DNA\ string\ you\ should\:\n\n\ Print\ the\ DNA\ string.\n\ Calculate\ the\ gene\ by\ sending\ this\ DNA\ string\ as\ an\ argument\ to\ findGene.\ If\ a\ gene\ exists\ following\ our\ algorithm\ above,\ then\ print\ the\ gene,\ otherwise\ print\ the\ empty\ string.\n\ 7.\ Write\ the\ void\ method\ printAllGenes\ that\ has\ one\ String\ parameter\ dna,\ representing\ a\ string\ of\ DNA.\ In\ this\ method\ you\ should\ repeatedly\ find\ genes\ and\ print\ each\ one\ until\ there\ are\ no\ more\ genes.\ Hint\:\ remember\ you\ learned\ a\ while(true)\ loop\ and\ break.\n\ \n\ @author\ (Pratham\ Shroff)\ \n\ @version\ (22\ December\ 2018)\n
comment1.params=dna\ startIndex\ stopCodon
comment1.target=int\ findStopCodon(java.lang.String,\ int,\ java.lang.String)
comment2.params=
comment2.target=void\ testfindStopCodon()
comment3.params=dna
comment3.target=java.lang.String\ findGene(java.lang.String)
comment4.params=
comment4.target=void\ testFindGene()
comment5.params=dna
comment5.target=void\ printAllGenes(java.lang.String)
comment6.params=
comment6.target=void\ main()
numComments=7
