#BlueJ class context
comment0.target=Pratham_BabyNames
comment0.text=\n\ Write\ a\ description\ of\ BabyNames\ here.\n\ \n\ @author\ (Pratham\ Shroff)\ \n\ @version\ (24\ December\ 2018)\n
comment1.params=
comment1.target=void\ printNames()
comment10.params=
comment10.target=void\ testYearOfHighestRank()
comment11.params=name\ gender
comment11.target=double\ getAverageRank(java.lang.String,\ java.lang.String)
comment12.params=
comment12.target=void\ testGetAverageRank()
comment13.params=year\ name\ gender
comment13.target=int\ getTotalBirthsRankedHigher(int,\ java.lang.String,\ java.lang.String)
comment14.params=
comment14.target=void\ testGetTotalBirthsRankedHigher()
comment15.params=
comment15.target=void\ testAll()
comment16.params=
comment16.target=void\ main()
comment2.params=fr
comment2.target=void\ totalBirths(edu.duke.FileResource)
comment2.text=\n\ This\ method\ returns\ the\ total\ number\ of\ births\ (males\ and\ females)\ in\ a\ file\n\ and\ the\ total\ number\ of\ names\ (males\ and\ females)\n
comment3.params=
comment3.target=void\ testTotalBirths()
comment4.params=year\ name\ gender
comment4.target=int\ getRank(int,\ java.lang.String,\ java.lang.String)
comment4.text=\n\ This\ method\ returns\ the\ rank\ of\ the\ name\ in\ the\ file\ for\ the\ given\ gender,\ \n\ where\ rank\ 1\ is\ the\ name\ with\ the\ largest\ number\ of\ births.\ \n\ If\ the\ name\ is\ not\ in\ the\ file,\ then\ -1\ is\ returned.\n
comment5.params=
comment5.target=void\ testGetRank()
comment6.params=year\ rank\ gender
comment6.target=java.lang.String\ getName(int,\ int,\ java.lang.String)
comment7.params=
comment7.target=void\ testGetName()
comment8.params=name\ year\ newYear\ gender
comment8.target=void\ whatIsNameInYear(java.lang.String,\ int,\ int,\ java.lang.String)
comment9.params=name\ gender
comment9.target=int\ yearOfHighestRank(java.lang.String,\ java.lang.String)
numComments=17
